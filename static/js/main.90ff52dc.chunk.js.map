{"version":3,"sources":["components/innerContent/TransferMoney.js","components/innerContent/SendEnvelope.js","func/ImgParser.js","components/innerContent/CashSpread.js","components/innerContent/SendGifticon.js","components/Content.js","components/Header.js","Paperbase.js","App.js","index.js"],"names":["PreviewImg","useImage","image","width","height","withStyles","theme","share","marginRight","spacing","backgroundColor","color","props","classes","useState","amount","setAmount","Grid","container","item","xs","fontSize","text","x","y","className","btn","noValidate","autoComplete","TextField","id","label","variant","value","onChange","e","val","target","replace","Intl","NumberFormat","format","onChangeShareAmount","Button","startIcon","onClick","window","Kakao","Link","sendDefault","objectType","content","title","description","imageUrl","imageWidth","imageHeight","link","mobileWebUrl","webUrl","buttons","success","response","console","log","fail","error","img","swipeBtn","maxWidth","flexGrow","parent","linkList","swipeIdx","setswipeIdx","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","useTheme","paper","size","disabled","direction","src","alt","MobileStepper","steps","position","root","nextButton","backButton","ImgParser","dataurl","fileName","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","file","dataTransfer","DataTransfer","items","add","files","totalAmount","setTotalAmount","maxAmount","setMaxAmount","stageRef","useRef","onClickShare","preventDefault","imgFiles","imgBase64","current","toDataURL","mimeType","quality","pixelRatio","kakaoLinkUi","imgFile","ImageParser","base64ToFile","imgFileList","fileToFileList","uploadImage","then","res","resImage","infos","original","url","sendDefaultPromise","onChangeAmount","setter","ref","btnWrap","textAlign","padding","palette","secondary","margin","overflow","searchBar","borderBottom","amountInput","typography","block","display","contentWrapper","innerContents","tag","SendGifticon","Paper","AppBar","elevation","Toolbar","alignItems","tabIndex","menuButton","marginLeft","iconButtonAvatar","textDecoration","common","white","button","borderColor","Fragment","IconButton","Avatar","href","component","secondaryBar","Typography","Tabs","textColor","Tab","setTabIndex","Copyright","align","Date","getFullYear","createMuiTheme","primary","light","main","dark","h5","fontWeight","letterSpacing","shape","borderRadius","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiDrawer","MuiButton","textTransform","contained","boxShadow","MuiTabs","indicator","borderTopLeftRadius","borderTopRightRadius","minWidth","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","styles","drawer","flexShrink","app","flex","flexDirection","background","footer","React","mobileOpen","setMobileOpen","ThemeProvider","CssBaseline","onDrawerToggle","App","init","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90ff52dc.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareIcon from \"@material-ui/icons/ShareRounded\"\r\nimport { Stage, Layer, Image, Text } from 'react-konva';\r\nimport useImage from 'use-image';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n\r\n  share: {\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: '#fbe300',\r\n    color: '#3b1e1e'\r\n  },\r\n});\r\n\r\nconst PreviewImg = () =>{\r\n  const [image] = useImage('https://i.ibb.co/CtQccYr/preview.png');\r\n  return <Image image={image} width=\"300\" height=\"300\" />;\r\n}\r\n\r\nfunction TransferMoney(props) {\r\n  const { classes } = props;\r\n  const [amount, setAmount] = useState(0);\r\n\r\n\r\n  const onClickShare = () => {\r\n    window.Kakao.Link.sendDefault({\r\n      objectType: 'feed',\r\n          content: {  // 여기부터 실제 내용이 들어갑니다.\r\n              title: `${amount} 원을 받으세요.`, // 본문 제목\r\n              description: '',  // 본문 바로 아래 들어가는 영역\r\n              imageUrl: 'https://i.ibb.co/pWTd4Rj/transfer.png', // 이미지\r\n              imageWidth: 264, imageHeight : 100,\r\n              link: {\r\n                  mobileWebUrl: 'https://i.ibb.co/wQ3w0D8/CAI0-N9-WU8-AEQ0bm.png',\r\n                  webUrl: 'https://i.ibb.co/wQ3w0D8/CAI0-N9-WU8-AEQ0bm.png'\r\n              }\r\n          },\r\n          buttons: [\r\n              {\r\n                  title: '받기',\r\n                  link: {\r\n                      mobileWebUrl: 'https://i.ibb.co/wQ3w0D8/CAI0-N9-WU8-AEQ0bm.png'\r\n                  }\r\n              }],\r\n          success: function(response) {\r\n              console.log(response);\r\n          },\r\n          fail: function(error) {\r\n              console.log(error);\r\n          }\r\n    })\r\n  };\r\n  const onChangeShareAmount = (e) => {\r\n    let val = e.target.value.replace(/[^0-9]/g,'');\r\n    val = new Intl.NumberFormat().format(val);\r\n    setAmount(val);\r\n  }\r\n  const toFormatNum = (num) => new Intl.NumberFormat().format(num)\r\n\r\n  return (\r\n      <>\r\n          {/* 좌우 나누는 바깥쪽 */}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Stage width={300} height={270}>\r\n              <Layer>\r\n                <PreviewImg />\r\n                <Text\r\n                fontSize={14}\r\n                text={`${amount} 원을 받으세요.`}\r\n                x={100}\r\n                y={150}\r\n                width={700}\r\n              />\r\n              </Layer>\r\n            </Stage>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs>\r\n                <form className={classes.btn} noValidate autoComplete=\"off\">\r\n                <TextField id=\"outlined-basicc\" label=\"금액\" variant=\"outlined\" value = {amount} onChange = {(e)=>onChangeShareAmount(e)}/>\r\n                </form>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs> \r\n                <Button startIcon={<ShareIcon/>} variant=\"contained\" color=\"primary\" id=\"kakao-link-btn\" className={classes.share} onClick={()=>onClickShare()}>\r\n                    공유하기\r\n                  </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {/* 좌우 나누는 바깥쪽 */}\r\n        </Grid>\r\n      </>\r\n    );\r\n}\r\n\r\nTransferMoney.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TransferMoney);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ShareIcon from \"@material-ui/icons/ShareRounded\"\r\n\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  share: {\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: '#fbe300',\r\n    color: '#3b1e1e'\r\n  },\r\n  img: {\r\n    'max-width': '70%',\r\n    'max-height': '60%'\r\n  },\r\n  btn: {\r\n    'text-align' : 'center',\r\n  },\r\n  swipeBtn: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  parent: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n\r\n});\r\n\r\nfunction SendEnvelope(props) {\r\n  const { classes } = props;\r\n  const linkList =[\r\n    'https://i.ibb.co/fCrY699/jungsaan.png',\r\n    'https://i.ibb.co/0VQB5Cv/thankyouv3.png',\r\n    'https://i.ibb.co/6tpn2rM/yongdon.png',\r\n    'https://i.ibb.co/QMYMBDs/marriage.png',\r\n    'https://i.ibb.co/xqFwhsQ/saveit.png',\r\n  'https://i.ibb.co/tBNPJVq/myheart.png',\r\n  'https://i.ibb.co/WDkHf67/berich.png',\r\n  'https://i.ibb.co/ZSJKnyY/congratulation.png'\r\n];\r\n\r\n\r\n  const [swipeIdx,setswipeIdx] = useState(0);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  //KAKAO API\r\n  const onClickShare =() => {\r\n      window.Kakao.Link.sendDefault({\r\n        objectType: 'feed',\r\n        content: {\r\n            title: '봉투가 도착했어요.',\r\n            description: '',\r\n            imageUrl: `${linkList[swipeIdx]}`, // 이미지\r\n            imageWidth: 150, imageHeight : 50,\r\n            link: {\r\n                mobileWebUrl: 'https://i.ibb.co/yB2dY9X/37886305.jpg',\r\n                webUrl: 'https://i.ibb.co/yB2dY9X/37886305.jpg'\r\n            }\r\n        },\r\n        buttons: [\r\n            {\r\n                title: '받기',\r\n                link: {\r\n                   mobileWebUrl: 'https://i.ibb.co/yB2dY9X/37886305.jpg'\r\n                }\r\n            }],\r\n          success: function(response) {\r\n              console.log(response);\r\n          },\r\n          fail: function(error) {\r\n              console.log(error);\r\n          }\r\n      });\r\n    }\r\n  \r\n    //SWIPE 버튼 관련\r\n\r\n    const handleNext = () => {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      setswipeIdx((swipeIdx)=>swipeIdx + 1);\r\n    };\r\n  \r\n    const handleBack = () => {\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n      setswipeIdx((swipeIdx)=>swipeIdx - 1);\r\n    };\r\n    const theme = useTheme();\r\n  \r\n\r\n  return (\r\n    <>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={8}>\r\n        <Grid container spacing={1} className={classes.paper}>\r\n              <Grid item xs={3}>\r\n                  <Button size=\"large\" onClick={handleBack} disabled={activeStep === 0} className={classes.paper}>\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                  </Button>\r\n\r\n              </Grid>\r\n              <Grid item xs={6} className={classes.paper}>\r\n                <img src={linkList[swipeIdx]} className={classes.img} alt=\"x\" />\r\n              </Grid>\r\n              <Grid item xs={3} className={classes.paper}>\r\n                  <Button size=\"large\" onClick={handleNext} disabled={activeStep === 7}>\r\n                  {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                  </Button>\r\n              </Grid>\r\n          </Grid>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <Button startIcon={<ShareIcon/>} variant=\"contained\" color=\"primary\" id=\"kakao-link-btn\" className={classes.share} onClick={()=>onClickShare()}>\r\n          공유하기\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n        <MobileStepper\r\n          variant=\"dots\"\r\n          steps={8}\r\n          position=\"static\"\r\n          activeStep={activeStep}\r\n          className={classes.root}\r\n          nextButton={\r\n            <Button size=\"medium\" onClick={handleNext} disabled={activeStep === 7}>\r\n              \r\n              {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </Button>\r\n          }\r\n          backButton={\r\n            <Button size=\"medium\" onClick={handleBack} disabled={activeStep === 0}>\r\n              {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n              \r\n            </Button>\r\n          }\r\n        />\r\n    </>\r\n  );\r\n}\r\n\r\nSendEnvelope.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SendEnvelope);\r\n","export default class ImgParser{\r\n    static base64ToFile(dataurl, fileName){\r\n        const arr = dataurl.split(',');\r\n        const mime = arr[0].match(/:(.*?);/)[1];\r\n        const bstr = atob(arr[1]);\r\n        let n = bstr.length;\r\n        const u8arr = new Uint8Array(n);\r\n            \r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new File([u8arr], fileName, {type:mime});\r\n    }\r\n\r\n    static fileToFileList(file){\r\n        const dataTransfer = new DataTransfer();\r\n        dataTransfer.items.add(file);\r\n        const fileList = dataTransfer.files;\r\n        return fileList;\r\n    }\r\n}","import React, {useEffect, createRef, useState, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ShareIcon from \"@material-ui/icons/ShareRounded\";\r\nimport { Stage, Layer, Image, Text } from 'react-konva';\r\nimport ImageParser from '../../func/ImgParser';\r\nimport useImage from 'use-image';\r\n\r\nconst styles = (theme) => ({\r\n  share: {\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: '#fbe300',\r\n    color: '#3b1e1e'\r\n  },\r\n  img: {\r\n    'max-width': '70%',\r\n    'max-height': '60%',\r\n  },\r\n});\r\n\r\nconst PreviewImg = () => {\r\n  const [image] = useImage('https://i.ibb.co/fFtxfP2/v3.png', 'Anonymous');\r\n  return <Image image={image} width=\"300\" height=\"300\" />;\r\n};\r\nPreviewImg.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction CashSpread(props) {\r\n  const { classes } = props;\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [maxAmount, setMaxAmount] = useState(0);\r\n  const stageRef = useRef(null);\r\n\r\n  const onClickShare = (e) => {\r\n    e.preventDefault();\r\n\r\n    const imgBase64 = stageRef.current.toDataURL({\r\n      mimeType: \"image/jpeg\",\r\n      quality: 1,\r\n      pixelRatio: 4\r\n    });\r\n\r\n    const kakaoLinkUi = {\r\n      objectType: 'feed',\r\n        content: {  // 실제 내용\r\n            title: '',\r\n            description: '',\r\n            //imageUrl: resImage,\r\n            //imageWidth: 500, imageHeight : 500,\r\n            link: {\r\n                mobileWebUrl: 'https://i.ibb.co/64WBxQg/mqdefault.jpg',\r\n                webUrl: 'https://i.ibb.co/64WBxQg/mqdefault.jpg'\r\n            }\r\n        },\r\n        buttons: [\r\n            {\r\n                title: '줍기',\r\n                link: {\r\n                    mobileWebUrl: 'https://i.ibb.co/64WBxQg/mqdefault.jpg'\r\n                }\r\n            }],\r\n        success: function(response) {\r\n            console.log(response);\r\n        },\r\n        fail: function(error) {\r\n          console.log(error);\r\n        }\r\n    };\r\n\r\n    const imgFile = ImageParser.base64ToFile(imgBase64, \"preview.jpg\");\r\n    const imgFileList = ImageParser.fileToFileList(imgFile);\r\n\r\n    const uploadImagePromise = (imgFiles) => window.Kakao.Link.uploadImage(imgFiles);\r\n    const sendDefaultPromise = (kakaoLinkUi) => window.Kakao.Link.sendDefault(kakaoLinkUi);\r\n\r\n    uploadImagePromise({file : imgFileList})\r\n      .then((res)=>{\r\n        const resImage = res.infos.original.url;\r\n        kakaoLinkUi.content.imageUrl = resImage;\r\n        sendDefaultPromise(kakaoLinkUi);\r\n      });\r\n  };\r\n  \r\n  const onChangeAmount = (e, setter) => {\r\n    let val = e.target.value.replace(/[^0-9]/g,'');\r\n    val = new Intl.NumberFormat().format(val);\r\n    setter(val);\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n              <Stage ref={stageRef} width={300} height={270}>\r\n                <Layer>\r\n                  <PreviewImg />\r\n                <Text\r\n                  fontSize={14}\r\n                  text={`빨리 줍줍 하세요!!\\n\\n금액은 랜덤!\\n총 ${totalAmount}원\\n최고 ${maxAmount}원\\n\\n기회는 선착순 1명 에게만\\n10분 후 마감됩니다.`}\r\n                  // wrap=\"char\"\r\n                  x={24}\r\n                  y={150}\r\n                  width={700}\r\n                />\r\n                </Layer>\r\n              </Stage>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Grid container spacing={3}>\r\n              <Grid item>\r\n                <form className={classes.btn} noValidate autoComplete=\"off\">\r\n                  <TextField id=\"outlined-basicc\" label=\"총 금액\" variant=\"outlined\" value = {totalAmount} onChange = {(e)=>onChangeAmount(e, setTotalAmount)}/>\r\n                </form>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n              <Grid item>\r\n                <form className={classes.btn} noValidate autoComplete=\"off\">\r\n                  <TextField id=\"outlined-basicc\" label=\"최고 금액\" variant=\"outlined\" value = {maxAmount} onChange = {(e)=>onChangeAmount(e, setMaxAmount)}/>\r\n                 </form>\r\n                </Grid>\r\n             </Grid>\r\n             <Grid container spacing={3}>\r\n                <Grid item xs>\r\n                  <Button startIcon={<ShareIcon/>} variant=\"contained\" color=\"primary\" onClick={(e)=>onClickShare(e)} className={classes.share}>\r\n                      공유하기\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nCashSpread.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(CashSpread);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ShareIcon from \"@material-ui/icons/ShareRounded\"\r\n\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  share: {\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: '#fbe300',\r\n    color: '#3b1e1e'\r\n  },\r\n  img: {\r\n    'max-width': '70%',\r\n    'max-height': '60%'\r\n  },\r\n  btn: {\r\n    'text-align' : 'center',\r\n  },\r\n  swipeBtn: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  btnWrap: {\r\n    textAlign: 'center',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n\r\n});\r\n\r\nfunction SendEnvelope(props) {\r\n  const { classes } = props;\r\n  const linkList =[\r\n    'https://i.ibb.co/cbyf25d/gifticon-starbucks.png',\r\n];\r\n\r\n\r\n  const [swipeIdx,setswipeIdx] = useState(0);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [sender, setSender] = useState(\"\");\r\n\r\n  //KAKAO API\r\n  const onClickShare =() => {\r\n        //템플릿 이용\r\n    window.Kakao.Link.sendCustom({\r\n        templateId: 29427 ,\r\n        templateArgs: {\r\n            'THU' : `${linkList[swipeIdx]}`,\r\n            'titles':  `${sender}님이 선물과 메시지를 보냈습니다.`,\r\n            'button' : '받기'\r\n        },\r\n\r\n        // content: {\r\n        //         title: `${sender}님이 선물과 메시지를 보냈습니다.`,\r\n        //         description: '',\r\n        //         imageUrl: `${linkList[swipeIdx]}`, // 이미지\r\n        //         imageWidth: 150, imageHeight : 180,\r\n        //         link: {\r\n        //             mobileWebUrl: 'https://i.ibb.co/yB2dY9X/37886305.jpg',\r\n        //             webUrl: 'https://i.ibb.co/yB2dY9X/37886305.jpg'\r\n        //         }\r\n        //       }\r\n    });\r\n\r\n\r\n\r\n\r\n      // window.Kakao.Link.sendDefault({\r\n      //   objectType: 'feed',\r\n      //   content: {\r\n      //       title: `${sender}님이 선물과 메시지를 보냈습니다.`,\r\n      //       description: '',\r\n      //       imageUrl: `${linkList[swipeIdx]}`, // 이미지\r\n      //       imageWidth: 150, imageHeight : 180,\r\n      //       link: {\r\n      //           mobileWebUrl: 'https://i.ibb.co/yB2dY9X/37886305.jpg',\r\n      //           webUrl: 'https://i.ibb.co/yB2dY9X/37886305.jpg'\r\n      //       }\r\n      //   },\r\n      //   buttons: [\r\n      //       {\r\n      //           title: '선물함으로 하기',\r\n      //           link: {\r\n      //              mobileWebUrl: 'https://i.ibb.co/yB2dY9X/37886305.jpg'\r\n      //           }\r\n      //       },\r\n      //       {\r\n      //         title: '감동카드 보내기',\r\n      //         link: {\r\n      //            mobileWebUrl: 'https://i.ibb.co/yB2dY9X/37886305.jpg'\r\n      //         }\r\n      //     }\r\n      //   ],\r\n      //     success: function(response) {\r\n      //         console.log(response);\r\n      //     },\r\n      //     fail: function(error) {\r\n      //         console.log(error);\r\n      //     }\r\n      // });\r\n    }\r\n  \r\n    //SWIPE 버튼 관련\r\n\r\n    const handleNext = () => {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      setswipeIdx((swipeIdx)=>swipeIdx + 1);\r\n    };\r\n  \r\n    const handleBack = () => {\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n      setswipeIdx((swipeIdx)=>swipeIdx - 1);\r\n    };\r\n\r\n    const onChangeSender = (e) => {\r\n      setSender(e.target.value)\r\n    };\r\n\r\n    const theme = useTheme();\r\n  \r\n\r\n  return (\r\n    <>\r\n    <Grid container>\r\n    <Grid item>\r\n    <h2>공사중이라 미안합니다.</h2>\r\n    <img src=\"https://i.ibb.co/7CGTW7V/rhdtk.jpg\"></img>\r\n  \r\n    </Grid>\r\n\r\n    </Grid>\r\n    {/* <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n              <Button size=\"large\" onClick={handleBack} disabled={activeStep === 0} className={classes.paper}>\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n              </Button>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.paper}>\r\n            <img src={linkList[swipeIdx]} className={classes.img} alt=\"x\" />\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.paper}>\r\n              <Button size=\"large\" onClick={handleNext} disabled={activeStep === 7}>\r\n              {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n              </Button>\r\n          </Grid>\r\n\r\n    </Grid>\r\n        <TextField id=\"outlined-basicc\" label=\"보내는 사람\" variant=\"outlined\" value = {sender} onChange = {(e)=>onChangeSender(e)}/>\r\n        <Button startIcon={<ShareIcon/>} variant=\"contained\" color=\"primary\" id=\"kakao-link-btn\" className={classes.share} onClick={()=>onClickShare()}>\r\n                 공유하기\r\n          </Button>\r\n\r\n      <MobileStepper\r\n        variant=\"dots\"\r\n        steps={8}\r\n        position=\"static\"\r\n        activeStep={activeStep}\r\n        className={classes.root}\r\n        nextButton={\r\n          <Button size=\"medium\" onClick={handleNext} disabled={activeStep === 7}>\r\n            \r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"medium\" onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            \r\n          </Button>\r\n        }\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nSendEnvelope.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SendEnvelope);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TransferMoney from './innerContent/TransferMoney';\r\nimport SendEnvelope from './innerContent/SendEnvelope';\r\nimport CashSpread from './innerContent/CashSpread'\r\nimport SendGifticon from './innerContent/SendGifticon';\r\nimport ShareIcon from \"@material-ui/icons/ShareRounded\"\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    maxWidth: 936,\r\n    margin: 'auto',\r\n    overflow: 'hidden',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  amountInput: {\r\n    fontSize: theme.typography.fontSize,\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  share: {\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: '#fbe300',\r\n    color: '#3b1e1e'\r\n  },\r\n  contentWrapper: {\r\n    margin: '40px 16px',\r\n  },\r\n\r\n});\r\nfunction Content(props) {\r\n  const { classes } = props;\r\n  const innerContents = [\r\n      {\r\n        tag : <TransferMoney/>,\r\n        title : \"송금하기\"\r\n      },\r\n      {\r\n        tag : <SendEnvelope/>,\r\n        title : \"봉투보내기\"\r\n      },\r\n      {\r\n        tag : <CashSpread/>,\r\n        title : \"뿌리기\"\r\n      },\r\n      {\r\n        tag : <SendGifticon/>,\r\n        title : \"기프티콘\"\r\n      }\r\n    ];\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item xs>\r\n              {innerContents[props.tabIndex].title}\r\n            </Grid>\r\n            <Grid item>\r\n              {/* <Button startIcon={<ShareIcon/>} variant=\"contained\" color=\"primary\" id=\"kakao-link-btn\" className={classes.share}>\r\n                카카오톡 공유하기\r\n              </Button> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.contentWrapper}>\r\n        {innerContents[props.tabIndex].tag}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Content);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = (theme) => ({\r\n  // secondaryBar: {\r\n  //   zIndex: 0,\r\n  // },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Grid item xs />\r\n            <Grid item>\r\n            <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar src=\"https://avatars1.githubusercontent.com/u/33686751?s=460&u=3149f23f59631814a244b3be1059e3ed8a0785be&v=4\" alt=\"My Avatar\" />\r\n              </IconButton>\r\n              <Link className={classes.link} href=\"https://github.com/LouiMinister\" target='blank' variant=\"body2\">\r\n                LouiMinister\r\n              </Link>\r\n              </Grid>\r\n              <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar src=\"https://avatars3.githubusercontent.com/u/13278955?s=460&u=21b03a32392f14ae9e09a44e6bddda9a58e6f2bf&v=4\" alt=\"My Avatar\" />\r\n              </IconButton>\r\n              <Link className={classes.link} href=\"https://github.com/enaenen\" target='blank' variant=\"body2\">\r\n              SpaceChae\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              {/* <Tooltip title=\"Alerts • No alerts\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip> */}\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\r\n              </IconButton>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"sticky\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                카카오톡 낚시꾼\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"sticky\"\r\n        elevation={0}\r\n      >\r\n        <Tabs value={props.tabIndex} textColor=\"inherit\">\r\n          <Tab textColor=\"inherit\" label=\"송금하기\" onClick = {()=>props.setTabIndex(0)}/>\r\n          <Tab textColor=\"inherit\" label=\"봉투보내기\" onClick = {()=>props.setTabIndex(1)}/>\r\n          <Tab textColor=\"inherit\" label=\"뿌리기\" onClick = {()=>props.setTabIndex(2)}/>\r\n          <Tab textColor=\"inherit\" label=\"기프티콘\" onClick = {()=>props.setTabIndex(3)}/>\r\n        </Tabs>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Content from './components/Content';\r\nimport Header from './components/Header';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://github.com/enaenen/kakaoprank\">\r\n        LouiMinister & Space 's React ToyProject\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#63ccff',\r\n      main: '#009be5',\r\n      dark: '#006db3',\r\n    },\r\n  },\r\n  typography: {\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 26,\r\n      letterSpacing: 0.5,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  props: {\r\n    MuiTab: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        backgroundColor: '#18202c',\r\n      },\r\n    },\r\n    MuiButton: {\r\n      label: {\r\n        textTransform: 'none',\r\n      },\r\n      contained: {\r\n        boxShadow: 'none',\r\n        '&:active': {\r\n          boxShadow: 'none',\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      indicator: {\r\n        height: 3,\r\n        borderTopLeftRadius: 3,\r\n        borderTopRightRadius: 3,\r\n        backgroundColor: theme.palette.common.white,\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        textTransform: 'none',\r\n        margin: '0 16px',\r\n        minWidth: 0,\r\n        padding: 0,\r\n        [theme.breakpoints.up('md')]: {\r\n          padding: 0,\r\n          minWidth: 0,\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        backgroundColor: '#404854',\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      primary: {\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        color: 'inherit',\r\n        marginRight: 0,\r\n        '& svg': {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      root: {\r\n        width: 32,\r\n        height: 32,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 256;\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  app: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    padding: theme.spacing(6, 4),\r\n    background: '#eaeff1',\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(2),\r\n    background: '#eaeff1',\r\n  },\r\n};\r\n\r\nfunction Paperbase(props) {\r\n  const { classes } = props;\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <div className={classes.app}>\r\n          <Header onDrawerToggle={handleDrawerToggle} tabIndex={tabIndex} setTabIndex={setTabIndex}/>\r\n          <main className={classes.main}>\r\n            <Content tabIndex={tabIndex}/>\r\n          </main>\r\n          <footer className={classes.footer}>\r\n            <Copyright />\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nPaperbase.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Paperbase);\r\n","import React, {useEffect} from 'react';\r\nimport Paperbase from './Paperbase';\r\n\r\nconst App = ()=>{\r\n    window.Kakao.init('762a46d7e5b7dbece3eddbb232189a84');\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Paperbase></Paperbase>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));"],"sourceRoot":""}